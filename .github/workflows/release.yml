name: release
on:
  release:
    types: [created]
env:
  TARGET: aria-discord-go

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin, linux, windows]
      fail-fast: false
    env:
      ASSET_NAME: aria-discord-go-${{ matrix.goos }}-amd64
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-go@v1
      with:
        go-version: 1.14.x
    - run: mkdir aria-discord-go
    - name: build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: amd64
      run: go build -ldflags "-X github.com/aria-music/aria-discord-go.botVersion=${{ github.sha }}" -o aria-discord-go/
    - name: run release script
      run: release/release.sh
    - name: zip it
      run: zip -r ${{ env.ASSET_NAME }}.zip aria-discord-go
    - name: release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.ASSET_NAME }}.zip
        asset_name: ${{ env.ASSET_NAME }}.zip
        asset_content_type: application/zip
    - name: discord notify
      if: always()
      uses: sarisia/actions-status-discord@v1
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
        job: ${{ env.TARGET }} - ${{ matrix.goos }}
